---
# PersistentVolume for MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/mysql
---
# PersistentVolumeClaim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: webapps
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: webapps
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0.34
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: greenhouse
            - name: MYSQL_USER
              value: greenhouse_user
            - name: MYSQL_PASSWORD
              value: root
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: webapps
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greenhouse-backend-deployment
  namespace: webapps
  labels:
    app: greenhouse
spec:
  replicas: 3
  selector:
    matchLabels:
      app: greenhouse
  template:
    metadata:
      labels:
        app: greenhouse
    spec:
      containers:
        - name: greenhouse
          image: raniawachene/greenhouse:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://10.107.2.40:3306/greenhouse?useUnicode=true&useJDBCCompliantTimezoneShift=true&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false"
            - name: SPRING_DATASOURCE_USERNAME
              value: "greenhouse_user"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "root"
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: greenhouse-service
  namespace: webapps
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: greenhouse
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greenhouse-frontend-deployment
  namespace: webapps
  labels:
    app: greenhouse-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: greenhouse-frontend
  template:
    metadata:
      labels:
        app: greenhouse-frontend
    spec:
      containers:
        - name: greenhouse-frontend
          image: raniawachene/greenhouse-frontend:latest
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: greenhouse-frontend-service
  namespace: webapps
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: greenhouse-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

