# PersistentVolume for MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pvo
  labels:
    app: mysql
    tier: database
  namespace: webapps
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /mnt/data/mysql

---

# PersistentVolumeClaim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-claims
  labels:
    app: mysql
    tier: database
  namespace: webapps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: manual

---

# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: webapps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          args:
            - "--ignore-db-dir=lost+found"
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              value: greenhouse
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc-claims

---

# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: webapps
spec:
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: mysql
    tier: database

---

# Secret for MySQL and SMTP Credentials
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: webapps
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: cm9vdA== # Base64 encoded value of "root"

---

apiVersion: v1
kind: Secret
metadata:
  name: smtp-secret
  namespace: webapps
type: Opaque
data:
  smtp-username: cmFuaWF3YWNoZW4yMUBnbWFpbC5jb20= # Base64 encoded value of "raniawachen21@gmail.com"
  smtp-password: Y2tzcWxseHB5dGVhaW9qcA==           # Base64 encoded value of your SMTP password

---

# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greenhouse-deployment
  namespace: webapps
spec:
  replicas: 2
  selector:
    matchLabels:
      app: greenhouse
  template:
    metadata:
      labels:
        app: greenhouse
    spec:
      containers:
        - name: greenhouse
          image: raniawachene/greenhouse:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8087
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-service:3306/greenhouse?useUnicode=true&useJDBCCompliantTimezoneShift=true&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: SPRING_MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: smtp-secret
                  key: smtp-username
            - name: SPRING_MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smtp-secret
                  key: smtp-password
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"

---

# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: greenhouse-service
  namespace: webapps
spec:
  selector:
    app: greenhouse
  ports:
    - protocol: TCP
      port: 8087
      targetPort: 8087
  type: LoadBalancer
