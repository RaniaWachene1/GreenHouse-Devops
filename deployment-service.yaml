apiVersion: v1
kind: Namespace
metadata:
  name: webapps
---
# PersistentVolumeClaim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: webapps
  labels:
    app: Appdb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentdb
  namespace: webapps
  labels:
    app: Appdb
spec:
  selector:
    matchLabels:
      app: Appdb
  replicas: 1
  template:
    metadata:
      labels:
        app: Appdb
    spec:
      containers:
        - name: appsql
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: greenhouse
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: webapps
spec:
  selector:
    app: Appdb
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentfront
  namespace: webapps
  labels:
    app: Appfront
spec:
  selector:
    matchLabels:
      app: Appfront
  replicas: 3
  template:
    metadata:
      labels:
        app: Appfront
    spec:
      containers:
        - name: appangular
          image: raniawachene/greenhouse-frontend:latest
          ports:
            - containerPort: 80
---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentback
  namespace: webapps
  labels:
    app: Appback
spec:
  replicas: 3
  selector:
    matchLabels:
      app: Appback
  template:
    metadata:
      labels:
        app: Appback
    spec:
      containers:
        - name: appspring
          image: raniawachene/greenhouse:latest
          ports:
            - containerPort: 8080
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: greenhouse-service
  namespace: webapps
spec:
  selector:
    app: Appback
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: greenhouse-frontend-service
  namespace: webapps
spec:
  selector:
    app: Appfront
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# IngressClass Definition
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: ingressc
spec:
  controller: k8s.io/ingress-nginx
---
# Ingress Definition
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: webapps
spec:
  ingressClassName: ingressc
  rules:
    - http:
        paths:
          - path: /backend
            pathType: Prefix
            backend:
              service:
                name: greenhouse-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: greenhouse-frontend-service
                port:
                  number: 80
